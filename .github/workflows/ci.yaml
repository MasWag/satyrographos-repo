name: CI

on:
  - pull_request
  - push

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os:
          - 'ubuntu-latest'
#         - 'macos-latest'
        ocaml-version:
#         - 4.10.1
          - 4.11.1
        snapshot:
          - stable-0-0-5
          - develop
        include:
          - os: 'ubuntu-latest'
            ocaml-version: '4.06.1'
            snapshot: stable-0-0-4
    runs-on: ${{ matrix.os }}
    env:
      OPAMSOLVERTIMEOUT: 3600
      SNAPSHOT: "snapshot-${{ matrix.snapshot }}"
    steps:
      - name: Checkout code (10 commits)
        uses: actions/checkout@v2
        with:
          fetch-depth: 10

      - name: Checkout master branch (50 commits)
        run: |
          git remote set-branches --add origin master
          git fetch --depth 50 origin master

      - name: Cache OPAM directory (Non Windows)
        uses: actions/cache@v2
        if: runner.os != 'Windows'
        with:
          path: "~/.opam"
          key: ${{ runner.os }}-opam-${{ matrix.ocaml-version }}-${{ matrix.snapshot }}

      - name: Cache OPAM directory (Windows)
        uses: actions/cache@v2
        if: runner.os == 'Windows'
        with:
          path: "C:\\cygwin\\home\\runneradmin\\.opam"
          key: ${{ runner.os }}-opam-${{ matrix.ocaml-version }}-${{ matrix.snapshot }}

      - name: Setup OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - name: Check validity of the snapshot OPAM files
        run: |
          opam lint --strict *.opam

      - name: Check validity of the package OPAM files
        run: |
          find packages -iname opam -exec opam lint --strict '{}' '+'

      - name: Setup OPAM repositories
        run: |
          opam repository add satysfi-external https://github.com/gfngfn/satysfi-external-repo.git
          opam repository add satyrographos-local .
          opam update

      - name: Update packages
        run: |
          opam pin add --no-action satysfi "$(opam show satysfi -f version)"
          opam pin add --no-action satyrographos "$(opam show satyrographos -f version)"
          opam upgrade --yes
          opam pin remove satysfi satyrographos

      - name: Install the snapshot
        run: |
          opam pin add "${SNAPSHOT}.dev" . --no-action
          opam depext "$SNAPSHOT" --yes --with-doc --with-test
          opam install "$SNAPSHOT" --yes --with-doc --with-test

      - name: Detect file collisions in installed SATySFI libraries
        run: |
          opam exec -- satyrographos install test-satysfi-root

      - name: Removing the snapshot
        run: |
          opam uninstall "$SNAPSHOT"

      - name: Run script
        run: |
          ./ci.sh

      - name: Test if the packages can be added to the snapshot
        if: github.event_name == 'pull_request'
        id: test-update-snapshot
        run: |
          git checkout "$SNAPSHOT.opam"
          opam update
          scripts/update-snapshot --opam "$SNAPSHOT.opam"
          if git diff --quiet HEAD -- "$SNAPSHOT.opam" ; then
            echo '::set-output name=result::no-updates'
          elif opam install "$SNAPSHOT" --yes --with-doc --with-test >install.log ; then
            echo '::set-output name=result::updated'
          else
            echo '::set-output name=result::failed'
          fi
          opam uninstall "$SNAPSHOT" --yes

      - name: Update the PR body
        uses: actions/github-script@v2
        if: github.event_name == 'pull_request'
        env:
          SNAPSHOT_UPDATABLE: ${{ steps.test-update-snapshot.outputs.result }}
        with:
          github-token: ${{ github.token }}
          script: |
            const pullRequestId = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            };
            const pull_request = await github.pulls.get(pullRequestId);
            const actionHeader = '# Automatic follow-ups';
            const actionText = `Add to ${process.env.SNAPSHOT}`;
            const regex = new RegExp(`(\n${actionHeader}\n.*\n)- ${actionText}$`, 'm');
 
            let replacement;
            switch (process.env.SNAPSHOT_UPDATABLE) {
              case 'updated':
                replacement = `$1- [ ] ${actionText}`;
                break;
              case 'no-updates':
                replacement = `$1- ~~${actionText}~~`;
                break;
              case 'failed':
                replacement = `$1- ~~${actionText}~~`;
                break;
            }

            const body = pull_request.data.body;
            if (body) {
              await github.pulls.update({
                ...pullRequestId,
                body: pull_request.body.replace(regex, replacement)
              });
            }

            
      - name: Clean up logs and temporary files
        run: |
          opam clean --switch-cleanup --logs
